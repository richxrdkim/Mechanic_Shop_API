"""Add password_hash to users

Revision ID: c4c279ebbd6c
Revises: 
Create Date: 2025-09-01 16:30:37.949179

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c4c279ebbd6c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_tickets',
    sa.Column('service_ticket_id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['service_ticket_id'], ['service_tickets.id'], ),
    sa.PrimaryKeyConstraint('service_ticket_id', 'inventory_id'),
    sa.UniqueConstraint('service_ticket_id', 'inventory_id', name='uq_ticket_part')
    )
    op.create_table('ticket_mechanics',
    sa.Column('service_ticket_id', sa.Integer(), nullable=False),
    sa.Column('mechanic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['mechanic_id'], ['mechanics.id'], ),
    sa.ForeignKeyConstraint(['service_ticket_id'], ['service_tickets.id'], ),
    sa.PrimaryKeyConstraint('service_ticket_id', 'mechanic_id'),
    sa.UniqueConstraint('service_ticket_id', 'mechanic_id', name='uq_ticket_mechanic')
    )
    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('email'))

    op.drop_table('members')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('email'))

    op.drop_table('user')
    with op.batch_alter_table('mechanics', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('specialty',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=True)

    with op.batch_alter_table('service_tickets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('primary_mechanic_id', sa.Integer(), nullable=True))
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('service_tickets_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'mechanics', ['primary_mechanic_id'], ['id'])
        batch_op.drop_column('mechanic_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=255), nullable=False))
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('password_hash')

    with op.batch_alter_table('service_tickets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mechanic_id', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('service_tickets_ibfk_1'), 'mechanics', ['mechanic_id'], ['id'])
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_column('primary_mechanic_id')

    with op.batch_alter_table('mechanics', schema=None) as batch_op:
        batch_op.alter_column('specialty',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)

    op.create_table('user',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('email'), ['email'], unique=True)

    op.create_table('members',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=360), nullable=False),
    sa.Column('DOB', sa.DATE(), nullable=False),
    sa.Column('password', mysql.VARCHAR(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('email'), ['email'], unique=True)

    op.drop_table('ticket_mechanics')
    op.drop_table('inventory_tickets')
    op.drop_table('inventory')
    # ### end Alembic commands ###

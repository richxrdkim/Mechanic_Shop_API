name: Mechanic Shop API CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

permissions:
  contents: read

jobs:
  test-sqlite:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Prepare test env (with safe defaults)
        shell: bash
        run: |
          # Defaults if secrets arenâ€™t set
          echo "FLASK_ENV=testing" >> $GITHUB_ENV
          echo "TESTING=1" >> $GITHUB_ENV
          echo "SQLALCHEMY_DATABASE_URI=sqlite:///test_ci.db" >> $GITHUB_ENV

          # Pull secrets if present; otherwise set dev defaults
          if [ -n "${{ secrets.SECRET_KEY }}" ]; then
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          else
            echo "SECRET_KEY=dev-secret" >> $GITHUB_ENV
          fi

          if [ -n "${{ secrets.JWT_SECRET }}" ]; then
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          else
            echo "JWT_SECRET=dev-jwt-secret" >> $GITHUB_ENV
          fi

      - name: Quick debug info
        run: |
          python -c "import sys,platform; print('Python:', sys.version); print('Platform:', platform.platform())"
          echo "Top-level: $GITHUB_WORKSPACE"
          ls -la
          echo "---- tree (first level) ----"
          find . -maxdepth 2 -type d -print

      - name: Run unit tests
        run: |
          python -m unittest discover -s tests -p "test_*.py" -t . -v
